package migool.op.server;

import static migool.op.server.PostServiceUtil.*;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;

import migool.http.client.HttpClientFactory;
import migool.op.client.PostService;
import migool.op.client.serializable.HostConfigSerializable;
import migool.op.client.serializable.PostResponseSerializable;
import migool.op.client.serializable.PostSerializable;
import migool.op.client.serializable.PostInfoSerializable;
import migool.op.server.jdo.JDOUtil;
import migool.post.Post;
import migool.post.category.Categories;
import migool.post.category.Category;
import migool.poster.IPoster;
import migool.poster.Posters;

import org.apache.http.client.HttpClient;
import org.apache.http.conn.GAEConnectionManager;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.params.BasicHttpParams;

import com.google.gwt.user.server.rpc.RemoteServiceServlet;

/**
 * 
 * @author Denis Migol
 * 
 */
@SuppressWarnings("serial")
public class PostServiceImpl extends RemoteServiceServlet implements PostService {

	static {
		HttpClientFactory.setDefault(new HttpClientFactory() {

			@Override
			public HttpClient newHttpClient() {
				return new DefaultHttpClient(new GAEConnectionManager(), new BasicHttpParams());
			}
		});
	}

	private Post post;
	private static final TreeMap<String, IPoster> posters = Posters.get();
	private static final List<String> hosts = Posters.getHosts();
	private TreeMap<String, HostConfigSerializable> hostConfigs = new TreeMap<String, HostConfigSerializable>();

	public PostServiceImpl() {
		super();
		post = new Post();
		for (String host : hosts) {
			hostConfigs.put(host, toHostConfigSerializable(JDOUtil.getHostConfigByHost(host)));
		}
//		// TEST
		System.out.println(uploadImage(new byte[]{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 2, 0, 0, 100, 0, 100, 0, 0, -1, -20, 0, 17, 68, 117, 99, 107, 121, 0, 1, 0, 4, 0, 0, 0, 60, 0, 0, -1, -18, 0, 14, 65, 100, 111, 98, 101, 0, 100, -64, 0, 0, 0, 1, -1, -37, 0, -124, 0, 6, 4, 4, 4, 5, 4, 6, 5, 5, 6, 9, 6, 5, 6, 9, 11, 8, 6, 6, 8, 11, 12, 10, 10, 11, 10, 10, 12, 16, 12, 12, 12, 12, 12, 12, 16, 12, 14, 15, 16, 15, 14, 12, 19, 19, 20, 20, 19, 19, 28, 27, 27, 27, 28, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 1, 7, 7, 7, 13, 12, 13, 24, 16, 16, 24, 26, 21, 17, 21, 26, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, -1, -64, 0, 17, 8, 0, 64, 0, 64, 3, 1, 17, 0, 2, 17, 1, 3, 17, 1, -1, -60, 0, -109, 0, 0, 2, 3, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 7, 4, 5, 8, 3, 0, 2, 1, 0, 1, 5, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 16, 0, 2, 2, 1, 3, 3, 3, 2, 4, 4, 5, 5, 0, 0, 0, 0, 1, 2, 3, 4, 17, 0, 18, 5, 33, 49, 6, 65, 34, 19, 81, 7, 97, 113, 50, 20, -127, -111, 35, 8, -16, -95, -79, 51, 21, -47, 66, 82, 98, 114, 17, 0, 2, 1, 3, 2, 3, 6, 6, 3, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 17, 3, 4, 49, 18, 33, 81, 5, 65, 97, 113, 34, 19, 6, -127, -111, -79, 50, 66, 82, -16, -95, -63, 51, -1, -38, 0, 12, 3, 1, 0, 2, 17, 3, 17, 0, 63, 0, -43, 26, 0, -10, -128, 6, -68, -37, -18, 23, -116, -8, 117, 47, -36, 115, 22, 66, -51, 34, -77, 85, -91, 31, -70, 121, -118, -116, -112, -118, 59, 15, -3, -101, 0, 125, 116, -55, -36, 81, 92, 75, 56, -72, 119, 50, 37, -74, -38, -81, -47, 25, -13, -55, 63, -72, -97, 57, -26, 28, -98, 43, 103, 5, 72, -110, 99, -114, 32, -78, -50, 87, 39, 27, -27, 113, -114, -93, -47, 84, 106, -123, -52, -71, 61, 56, 29, 126, 31, -73, 45, 70, 53, -71, -26, 127, 36, 6, 67, -25, -1, 0, 112, -85, -39, 54, 96, -14, 126, 75, -27, 39, 113, 18, -39, 121, 35, 39, -1, 0, -122, 36, 127, -106, -94, 89, 19, -26, 104, 75, -94, -29, 63, -63, 127, 63, -79, -111, -31, -97, -36, -73, 59, 86, 120, -85, 121, 85, 100, -71, 87, 42, -78, -36, -123, 126, 59, 8, 9, -37, -65, 106, -5, 36, 31, -112, 83, -85, 22, -14, -35, 105, 35, 27, 51, -37, 113, 106, -74, 93, 37, -6, -65, -16, -48, 124, 23, 63, -60, 115, -36, 100, 92, -97, 17, 105, 45, -46, -101, -12, 74, -121, -79, 29, -43, -127, -22, -84, 61, 65, -21, -85, -55, -90, -86, -114, 82, -19, -87, 91, -109, -116, -107, 36, -117, 13, 41, 25, -19, 0, 3, 125, -39, -5, -111, 95, -62, 120, 37, -110, 53, -7, 121, -117, -5, -30, -29, 33, 35, 42, 29, 70, 90, 89, 59, 123, 19, 35, -13, 56, 26, -118, -11, -43, 5, 83, 71, -90, 96, 60, -101, -69, 87, -38, -72, -65, 3, 35, 114, -68, -89, 35, -51, 95, -75, -55, -14, 54, 30, -35, -53, 4, -121, -79, 33, -53, 62, 122, 28, 99, -96, 95, 64, 6, -78, -27, 39, 45, 79, 65, -77, 98, 22, -29, -74, 10, -111, 92, 9, 126, 59, -63, 114, 30, 69, -54, -81, 21, -59, 71, -14, -39, 42, -49, -109, -19, -115, 85, 49, -100, -74, 63, 17, -91, -73, 105, -51, -47, 17, 103, -11, 24, 99, 67, 124, -109, 125, -100, 57, -116, 74, -97, -37, -1, 0, -111, 48, 65, 114, -28, 81, 72, 88, 7, 88, -43, -100, 41, 56, -64, -50, 50, 78, 14, 122, 13, 90, -114, 26, -19, 103, 57, 115, -35, 55, 43, -27, -126, -89, 123, 47, -68, 115, -20, -105, 3, -60, 9, -19, -7, 50, -59, -53, 2, 2, -64, -84, 93, 17, 58, 103, 35, -84, 93, 115, -23, -41, -7, -22, -60, 49, -29, 30, -13, 51, 47, -83, -28, 94, 107, -114, -33, 2, -14, -68, -68, 47, -127, 114, -36, 39, 33, -64, -62, -43, -8, 79, 35, -100, -45, -71, 84, 57, 17, 60, -14, -97, -24, 78, 55, -12, 93, -83, -3, 50, 20, 14, -99, -5, 105, -44, 80, -48, -87, -22, 79, 33, 61, -50, -78, -118, -81, -64, 116, 41, 37, 65, 61, 15, -48, -9, -44, -123, 51, -50, -63, 70, 73, -64, -6, -98, -102, 1, -103, 31, -17, -89, -103, -73, -109, -7, -68, -11, 19, 11, -58, 112, -65, 37, 58, -28, 116, 105, 25, 92, 9, -99, -104, -6, 23, 82, 0, 30, -125, 62, -70, -52, -55, -71, -70, 94, 7, 121, -48, 48, 125, 43, 91, -34, -73, 21, 126, 2, -8, 47, -56, 58, -116, 69, -1, 0, 106, -113, 81, -8, -2, 31, -122, -86, -101, -44, -88, -27, -2, -34, -8, 3, -5, -21, -36, -27, -124, -62, -68, 127, -76, -93, -72, -31, 91, 7, 116, -114, 58, 117, 59, -74, -88, -42, -114, 28, 60, -82, 71, 23, -18, 108, -102, -36, -115, -91, -8, -15, -8, -79, -41, 27, -93, -70, -107, -119, -121, -60, 93, 35, -36, 24, 101, 79, -75, 81, 72, 43, 31, -23, -64, -6, -6, 106, -31, -52, -48, -81, -28, 43, 69, 44, 59, 83, 116, 88, 41, -75, -78, 81, -107, -118, -78, -27, 73, 25, -50, -27, -23, -73, 57, 61, 79, -45, 74, -126, -126, -93, -17, 117, -37, 75, -29, -36, 93, 58, 117, 27, -30, 73, -31, 120, -39, 123, -119, 16, -115, -103, -37, -97, 113, -35, -2, 14, -94, -56, -113, -109, -127, -93, -46, -91, 21, 123, -51, -6, -53, -24, 104, -38, -1, 0, -20, 71, -45, 7, 106, -28, 127, 13, 72, 102, -91, 68, 82, -7, 101, -37, 80, -41, -81, 94, -101, -86, -39, -77, 50, -57, -122, 43, -2, -34, 9, -112, -19, 97, -18, -62, -125, -4, 116, 3, -48, -59, -4, -32, 45, -49, 114, 8, 78, 66, 89, -101, -28, 61, -55, -2, -93, 96, 100, -2, 90, -60, -71, -9, 63, 19, -44, -80, -27, 91, 48, -89, -21, 31, -95, -15, 82, -91, -101, -106, 98, -85, 85, 12, -106, 103, 109, -111, 32, 4, -28, -97, -53, -82, 7, 115, -94, 16, 114, 105, 34, 92, -101, -15, -77, 109, -36, -106, -111, 70, -117, -15, 111, 28, -113, -125, -85, -57, 67, -58, -89, -51, 44, 72, 42, -40, 70, 27, 30, 70, -109, -34, -45, -68, -121, -47, 29, -104, -86, -88, -18, 122, -6, 107, 114, 16, 81, 73, 35, -53, -14, 47, -54, -11, -57, 114, 90, -55, -123, -16, 91, -100, 84, -111, 23, 37, -111, 74, -57, 55, 64, -95, 89, 115, -123, 10, 51, -33, -89, -16, -4, 116, -30, 18, 20, -106, 75, 71, 36, 83, 43, 54, 8, 57, 100, 4, -93, 109, 27, -40, -87, -12, -61, 49, 25, -19, -97, -53, 64, 2, 118, 42, 127, -56, -41, -79, 13, -7, 62, 104, 18, -12, 111, 20, -123, -94, 67, -124, 116, -50, 10, -88, 116, 42, -63, -79, -68, 105, 36, -86, 58, 19, 113, 117, 67, -94, -117, -121, -85, 27, 9, 22, 110, -104, 50, 33, -56, 36, 126, 57, 58, 109, 6, -108, 126, 101, 11, 71, 21, 94, 83, -27, 100, -114, -108, -121, -26, 10, 23, 2, 57, 70, -58, 118, 103, 7, 106, -81, 66, 72, 29, -76, 32, 102, 87, -5, -89, 74, -67, 47, 56, -28, 126, 20, 72, -95, -100, 69, 103, -6, 120, -40, 75, -58, 3, -80, -37, -45, -85, 41, 39, 26, -53, -54, -115, 39, -64, -17, -3, -67, 119, 118, 46, -65, 107, 107, -64, 36, -5, 117, -29, 23, 40, 58, -33, -37, 11, 115, 22, 17, 12, 85, 44, 41, 83, 29, 118, 127, 118, 31, -82, -39, 28, 96, -97, 111, 65, -45, 87, 49, 108, 108, -30, -11, 103, 63, -41, 58, -102, -65, 63, 78, 31, -13, -117, -7, -79, -87, -57, -33, 75, 20, 99, 122, -37, 85, 100, 6, 70, -119, -56, 113, -99, -40, 111, 97, 5, -78, -92, 99, 39, -41, -7, -22, -39, -128, 124, -41, -97, -111, -75, 106, 89, 26, 31, -119, 42, -71, 86, -124, -78, 16, 118, -72, 17, 88, 107, 27, -126, 38, -8, -6, -108, 110, -67, -67, 70, -128, 100, -23, -23, 114, -90, -78, 88, 16, -57, 98, -88, 2, 76, -41, 113, 62, -34, -121, 45, -76, -127, -65, 29, 8, -37, -99, 0, -104, 59, 37, -56, -92, -102, -96, -123, 49, 17, -111, 108, 73, 96, 6, 98, 85, 72, 99, -69, -30, -35, -43, -118, -88, 108, 127, 19, -23, -92, 96, 55, -8, -69, 53, -83, 82, -114, 122, -14, -84, -15, -66, 72, -107, 113, -126, 123, 30, -38, 104, 29, -20, 65, 29, -120, 30, 25, 70, -24, -28, 82, -82, 63, 2, 48, 123, -24, 1, 69, -27, -66, 11, -57, -83, -8, -109, -108, 88, -89, 69, -10, 112, -73, 102, -38, 36, -125, -88, 2, 22, 32, 97, -41, -1, 0, 15, 110, 123, -2, 26, 54, -90, -21, 66, 91, 119, -89, 8, -72, -59, -75, 25, 106, -71, -108, -95, 38, -29, -21, -104, -116, -110, 65, 116, -84, -126, -115, -75, 80, 70, 80, -126, -53, 50, -80, -58, -58, -58, -44, -57, -13, -45, -56, -119, -68, 93, -6, 75, 12, -79, 86, 11, 25, 89, 11, 20, -114, 51, 8, -116, -54, -25, -85, 2, 122, -28, -74, 71, 125, 0, 19, -34, -30, 101, -81, 105, 35, -126, -100, -106, 42, -41, -38, -11, 99, 93, -82, -122, 76, 123, -39, -43, -120, 27, -53, 15, -44, -34, -104, -58, 53, 103, 30, -27, -76, -68, -38, -108, 50, 97, 118, 82, 91, 116, 46, -8, -15, 45, 30, 57, -92, -78, -54, -78, 59, -55, 51, 36, 99, -96, 46, -59, -124, 104, 7, 114, 59, 116, -11, -44, 23, 36, -101, -31, -95, 106, -43, -73, 24, -47, -22, 47, -8, -114, 66, 42, -126, 123, 22, 33, 120, -90, 44, -27, -43, 19, 33, 80, -69, 108, -113, 113, 13, -116, 46, 71, 79, -90, -102, 74, 18, -8, -1, 0, 48, -87, 53, 110, 74, -116, -50, -76, 45, 72, -85, 110, -71, 3, -93, 56, 10, -78, 76, -114, 79, -58, 125, -101, 73, 4, 122, 119, -45, 88, 6, 126, 81, 127, -108, -29, -72, 11, -73, -72, -70, -85, 118, -11, 116, -7, 34, -84, -60, -128, -63, 72, -33, -6, 122, -110, 19, 36, 1, -33, 81, -36, -109, -116, 91, 74, -84, 116, 18, 110, -115, -48, 20, -15, 111, 62, -15, 95, 55, -31, 101, -81, -55, 24, 107, 93, -127, 24, -33, -89, 43, 5, 80, -95, 122, -53, 27, 62, 50, -101, 91, 57, -18, -65, -25, -88, 49, 114, -29, 113, 114, -105, 34, 91, -42, 28, 31, 52, 1, 115, 94, 105, -29, 75, 118, -51, 47, -36, 30, 85, 16, -78, 87, -73, 80, -113, 116, 36, -100, 70, -31, -52, 121, 97, -116, 101, 114, 8, -6, 105, -73, 58, -107, -104, -70, 54, 58, 24, -105, 36, -85, 64, 110, -81, 55, -59, -64, -82, -109, 77, 114, 10, 107, -77, -32, -127, 99, -115, -105, 126, 78, -30, 112, -51, -6, -117, 103, -96, -18, 52, -56, -11, 91, 47, -104, -25, -123, 113, 114, 10, -94, -5, -79, -51, -77, 124, 85, 56, -28, -73, 26, 97, 127, 115, 35, 69, 20, -116, 125, 24, -58, 101, 65, -44, 117, -23, -91, -121, 81, -124, -101, -91, 68, 120, 82, 90, -48, -109, 99, -52, -8, -39, -34, -99, 71, -81, 61, 94, 103, -111, -37, 20, -74, 103, 17, -54, -121, 118, -29, 40, -116, -85, 74, 19, 59, 66, 71, -128, 49, -22, 125, 117, 60, 50, -31, 41, 40, -10, -78, 57, -40, -108, 85, 123, 2, 41, -85, 113, -14, -42, -83, 11, -121, 20, 40, -68, 114, 70, -79, -69, 42, 23, -116, -10, 104, -41, 33, -5, 110, 30, -121, -23, -85, 36, 21, 39, 95, 74, -81, 82, -56, 112, -119, 9, -115, -107, -28, 7, 96, -24, 50, 25, -80, 70, 54, -80, -10, -28, 126, 67, -41, 72, -59, 3, 60, -89, -18, -75, 89, 12, -75, -68, 106, -77, -61, -110, 65, -65, 60, -78, 22, 61, 113, -104, -31, 15, -127, -111, -40, -73, -14, -42, 54, 71, 85, -89, 8, 42, -9, -102, 54, -80, 42, -68, -52, 85, 91, -29, 99, -98, -57, -51, 38, 93, -120, 36, -122, 97, -6, -119, 36, -74, 8, 110, -7, -1, 0, -90, -79, 125, 89, 62, 47, 86, 104, 43, 105, 42, 17, -49, 11, 99, -27, -114, 117, -111, 75, -57, -123, 72, -64, 33, 81, 71, 96, -67, 27, 61, 71, 83, -21, -92, -33, -62, -108, 29, -76, -17, 61, 43, -45, 69, -15, -40, 72, -20, 38, 115, -75, -108, -113, -12, 32, 105, 19, -93, -82, -126, 52, 113, -1, 0, -113, -79, -73, 111, -20, -93, -38, 59, 12, -111, -2, -115, -94, -67, -30, -19, 57, -73, 15, 105, -6, -120, 18, 22, 70, 89, 35, 117, 121, 9, 14, -89, -93, 126, -82, -29, 82, 70, -13, 78, -87, -115, -107, -76, -41, 18, -46, -91, -65, 33, -96, -5, -23, -40, -79, -14, 28, 9, 62, 89, 4, -79, 62, 14, 122, -85, -100, -114, -65, 77, 77, 28, -21, -79, 117, -36, 67, 44, 104, 53, 74, 29, 121, 78, 123, -51, 121, 36, 16, -35, -76, -87, 69, 91, -83, 120, -37, 98, 124, 121, 30, -58, -62, 111, 126, -34, -83, -87, -18, -11, 57, -51, 82, -76, -16, 67, 33, -119, 8, -97, -1, -39}));
	}

	public List<String> getCategories() {
		List<String> ret = new ArrayList<String>();
		for (Category cat : Categories.CATS) {
			ret.add(cat.name);
		}
		return ret;
	}

	public List<String> getHosts() {
		return hosts;
	}

	@Override
	public void setPost(PostSerializable clientPost) {
		Post post = new Post();
		post.title = clientPost.title;
		post.title = clientPost.title;
		post.url = clientPost.url;
		// TODO
		// public List<String> categories;
		post.image = getImage(clientPost.imageUrl, "image");
		System.out.println(post.image);

		post.begStory = clientPost.begStory;
		post.endStory = clientPost.endStory;

		post.name = clientPost.name;
		post.originalName = clientPost.originalName;
		post.version = clientPost.version;
		post.year = clientPost.year;
		post.format = clientPost.format;
		post.language = clientPost.language;
		post.size = clientPost.size;
		// public List<Image> screens; // TODO
		// public String fileLinks;
		post.tags = clientPost.tags;

		// Warez
		post.developer = clientPost.developer;
		post.os = clientPost.os;
		post.platform = clientPost.platform;
		post.free = clientPost.free;
		post.crack = clientPost.crack;

		this.post = post;
	}

	@Override
	public Map<String, HostConfigSerializable> getHostConfigs() {
		return hostConfigs;
	}

	@Override
	public HostConfigSerializable getHostConfig(String host) {
		return hostConfigs.get(host);
	}

	@Override
	public void setHostConfig(HostConfigSerializable hostConfig) {
		hostConfigs.put(hostConfig.host, hostConfig);
		JDOUtil.addHostConfig(toHostConfig(hostConfig));
	}

	@Override
	public PostInfoSerializable getPostInfo(String host) {
		return toPostInfoSerializable(posters.get(host).getPostInfo());
	}

	@Override
	public PostResponseSerializable post(String host, Map<String, String> params) {
		return toPostResponseSerializable(posters.get(host).post(post));
	}
}
